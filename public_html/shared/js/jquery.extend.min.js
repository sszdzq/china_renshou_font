(function($) {
	var _bajax = $.ajax;
	$.ajax = function(opt) {
		var _ppath = utils.getUrlPath();
		if (utils.isNull(opt.type)) {
			opt.type = "POST"
		}
		var _opt = $
				.extend(
						opt,
						{
							traditional : true,
							beforeSend : function(XMLHttpRequest) {
								XMLHttpRequest.setRequestHeader("djSafeId",
										_ppath);
								if (utils.isNull(opt.lockPage) == false
										&& opt.lockPage === true) {
									var val = "<div id='progress_div' class='load-container load8'><div class='loading_pic'><div class='loader'></div><div class='loading_word'>数据处理中，请稍候...</div></div></div>";
									$("body").append(val)
								}
							},
							complete : function(XMLHttpRequest, status) {
								if (utils.isNull(opt.lockPage) == false
										&& opt.lockPage === true) {
									var _cobj = $("#progress_div");
									if (_cobj.length > 0) {
										_cobj.remove()
									}
								}
							}
						});
		return _bajax(_opt)
	};
	var _bpost = $.post;
	$.post = function(turl, tdata, tsuccess, ttype) {
		var _opt = {
			url : turl,
			type : "POST"
		};
		if (utils.isNull(ttype) == false) {
			_opt.dataType = ttype
		}
		if (utils.isNull(tsuccess) == false) {
			_opt.success = tsuccess;
			if (typeof (tsuccess) === "function") {
				_opt.success = tsuccess
			} else {
				if (typeof (tsuccess) == "string") {
					_opt.dataType = tsuccess
				}
			}
		}
		if (utils.isNull(tdata) == false) {
			if (typeof (tdata) === "function") {
				_opt.success = tdata
			} else {
				if (typeof (tdata) == "object") {
					_opt.data = tdata
				} else {
					if (typeof (tdata) == "string") {
						if (tdata.indexOf("=") > 0) {
							_opt.data = tdata
						} else {
							_opt.dataType = tdata
						}
					}
				}
			}
		}
		$.ajax(_opt)
	};
	var _bget = $.get;
	$.get = function(turl, tdata, tsuccess, ttype) {
		var _opt = {
			url : turl,
			type : "GET"
		};
		if (utils.isNull(ttype) == false) {
			_opt.dataType = ttype
		}
		if (utils.isNull(tsuccess) == false) {
			_opt.success = tsuccess;
			if (typeof (tsuccess) === "function") {
				_opt.success = tsuccess
			} else {
				if (typeof (tsuccess) == "string") {
					_opt.dataType = tsuccess
				}
			}
		}
		if (utils.isNull(tdata) == false) {
			if (typeof (tdata) === "function") {
				_opt.success = tdata
			} else {
				if (typeof (tdata) == "object") {
					_opt.data = tdata
				} else {
					if (typeof (tdata) == "string") {
						if (tdata.indexOf("=") > 0) {
							_opt.data = tdata
						} else {
							_opt.dataType = tdata
						}
					}
				}
			}
		}
		$.ajax(_opt)
	};
	$.fn
			.extend({
				getData : function() {
					var jfobj = $(this);
					var ckflag = JPlaceHolder._check();
					if (jfobj.length > 0) {
						var retd = {};
						jfobj
								.find(
										"input[type='text'],input[type='hidden'],input[type='password'],textarea,select")
								.each(
										function(index, titem) {
											var _itmobj = $(titem);
											var tkey = _itmobj.attr("name")
													|| _itmobj.attr("id");
											if ((_itmobj[0].tagName == "INPUT" || _itmobj[0].tagName == "input")
													&& ckflag == false
													&& _itmobj.val() == _itmobj
															.attr("placeholder")) {
												retd[tkey] = ""
											} else {
												retd[tkey] = _itmobj.val()
											}
										});
						jfobj
								.find(
										"input[type='radio']:checked,input[type='checkbox']:checked")
								.each(
										function(index, titem) {
											var _itmobj = $(titem);
											var tkey = _itmobj.attr("name")
													|| _itmobj.attr("id");
											if (utils.isNull(retd[tkey])) {
												retd[tkey] = _itmobj.val()
											} else {
												var _oval = retd[tkey];
												if (typeof (_oval) === "string") {
													retd[tkey] = [ _oval,
															_itmobj.val() ]
												} else {
													retd[tkey].push(_itmobj
															.val())
												}
											}
										});
						return retd
					} else {
						return {}
					}
				},
				loadData : function(tdata) {
					var jfobj = $(this);
					if (jfobj.length > 0) {
						var retd = {};
						$("input,textarea,select", jfobj).each(
								function(index, titem) {
									var _itmobj = $(titem);
									var tkey = _itmobj.attr("name")
											|| _itmobj.attr("id");
									var _tval = tdata[tkey];
									if (_tval != null) {
										_itmobj.val(_tval)
									}
								})
					}
				},
				formInit : function(checkflag) {
					V.init(this.attr("id"))
				},
				validate : function() {
					return V.validate(this.attr("id"))
				}
			})
})(jQuery);
var utils = {
	dtregs : [ /^(\d{1,4})[-/](\d{1,2})[-/](\d{1,2})$/,
			/^(\d{1,4})[-/](\d{1,2})[-/](\d{1,2}) (\d{1,2}):(\d{1,2})$/,
			/^(\d{1,4})[-/](\d{1,2})[-/](\d{1,2}) (\d{1,2})$/ ],
	isDate : function(tdate, tobj) {
		for (var i = 0; i < this.dtregs.length; i++) {
			var d = tdate.match(utils.dtregs[i]);
			if (d != null) {
				if (d.length == 4) {
					var date = new Date(d[1], d[2] - 1, d[3]);
					if (typeof (tobj) != "undefined") {
						tobj.value = (d[1] + "-"
								+ (d[2].length == 1 ? ("0" + d[2]) : d[2])
								+ "-" + (d[3].length == 1 ? ("0" + d[3]) : d[3]))
					}
					return (date.getFullYear() == d[1]
							&& (date.getMonth() + 1) == d[2] && date.getDate() == d[3])
				} else {
					if (d.length == 6) {
						var date = new Date(d[1], d[2] - 1, d[3], d[4], d[5]);
						if (typeof (tobj) != "undefined") {
							tobj.value = (d[1] + "-"
									+ (d[2].length == 1 ? ("0" + d[2]) : d[2])
									+ "-"
									+ (d[3].length == 1 ? ("0" + d[3]) : d[3])
									+ " "
									+ (d[4].length == 1 ? ("0" + d[4]) : d[4])
									+ ":" + (d[5].length == 1 ? ("0" + d[5])
									: d[5]))
						}
						return (date.getFullYear() == d[1]
								&& (date.getMonth() + 1) == d[2]
								&& date.getDate() == d[3]
								&& date.getHours() == d[4] && date.getMinutes() == d[5])
					} else {
						var date = new Date(d[1], d[2] - 1, d[3], d[4]);
						if (typeof (tobj) != "undefined") {
							tobj.value = (d[1] + "-"
									+ (d[2].length == 1 ? ("0" + d[2]) : d[2])
									+ "-"
									+ (d[3].length == 1 ? ("0" + d[3]) : d[3])
									+ " " + (d[4].length == 1 ? ("0" + d[4])
									: d[4]))
						}
						return (date.getFullYear() == d[1]
								&& (date.getMonth() + 1) == d[2]
								&& date.getDate() == d[3] && date.getHours() == d[4])
					}
				}
			}
		}
		return false
	},
	getTimezero : function(tdate) {
		for (var i = 0; i < utils.dtregs.length; i++) {
			var d = tdate.match(utils.dtregs[i]);
			if (d != null) {
				var tstr = null;
				if (d.length == 4) {
					tstr = d[2] + "-" + d[3] + "-" + d[1]
				} else {
					if (d.length == 6) {
						tstr = d[2] + "-" + d[3] + "-" + d[1] + " " + d[4]
								+ ":" + d[5]
					} else {
						tstr = d[2] + "-" + d[3] + "-" + d[1] + " " + d[4]
								+ ":"
					}
				}
				return Date.parse(tstr)
			}
		}
	},
	isNull : function(tobj) {
		if (typeof (tobj) == "undefined" || tobj == null || tobj == ""
				|| tobj.length < 1) {
			return true
		} else {
			return false
		}
	},
	isBetween : function(tval, tmax, tmin, ttype) {
		if (ttype == "date" || ttype == "datetime") {
			var flag = true;
			if (!utils.isNull(tval) && !utils.isNull(tmax)) {
				flag = utils.getTimezero(tval) <= utils.getTimezero(tmax)
			}
			if (flag && !utils.isNull(tval) && !utils.isNull(tmin)) {
				flag = utils.getTimezero(tval) >= utils.getTimezero(tmin)
			}
			return flag
		} else {
			if (ttype == "num") {
				var flag = true;
				if (!utils.isNull(tval)) {
					var tmpv = tval.replace(/,/g, "");
					if (isNaN(tmpv)) {
						return false
					}
					if (!utils.isNull(tmax) && !isNaN(tmax)) {
						flag = parseFloat(tmpv) <= parseFloat(tmax)
					}
					if (flag && !utils.isNull(tmin) && !isNaN(tmin)) {
						flag = parseFloat(tmpv) >= parseFloat(tmin)
					}
				}
				return flag
			} else {
				if (ttype == "char") {
					var flag = true;
					if (!utils.isNull(tval) && !utils.isNull(tmax)) {
						flag = utils.getLength(tval) <= parseInt(tmax)
					}
					if (flag && !utils.isNull(tval) && !utils.isNull(tmin)) {
						flag = utils.getLength(tval) >= parseInt(tmin)
					}
					return flag
				} else {
					return true
				}
			}
		}
	},
	getLength : function(str) {
		return str.replace(/([^\x00-\xFF])/g, "**").length
	},
	getContextPath : function() {
		var location = (window.location.href + "").split("/");
		var basePath = "/" + location[3];
		return basePath
	},
	getUrlPath : function() {
		var _locations = (window.location.href + "").split("/");
		var _path = "";
		for (var i = 3; i < _locations.length; i++) {
			_path += "/" + _locations[i]
		}
		return Base64.encode(_path)
	}
};
~(function(root, factory) {
	if (typeof define === "function" && define.amd) {
		define([], factory)
	} else {
		if (typeof module === "object" && module.exports) {
			module.exports = factory()
		} else {
			root.Base64 = factory()
		}
	}
}
		(
				this,
				function() {
					function Base64() {
						this._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
					}
					Base64.prototype.encode = function(input) {
						var output = "", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;
						input = this._utf8_encode(input);
						while (i < input.length) {
							chr1 = input.charCodeAt(i++);
							chr2 = input.charCodeAt(i++);
							chr3 = input.charCodeAt(i++);
							enc1 = chr1 >> 2;
							enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
							enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
							enc4 = chr3 & 63;
							if (isNaN(chr2)) {
								enc3 = enc4 = 64
							} else {
								if (isNaN(chr3)) {
									enc4 = 64
								}
							}
							output = output + this._keyStr.charAt(enc1)
									+ this._keyStr.charAt(enc2)
									+ this._keyStr.charAt(enc3)
									+ this._keyStr.charAt(enc4)
						}
						return output
					};
					Base64.prototype.decode = function(input) {
						var output = "", chr1, chr2, chr3, enc1, enc2, enc3, enc4, i = 0;
						input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
						while (i < input.length) {
							enc1 = this._keyStr.indexOf(input.charAt(i++));
							enc2 = this._keyStr.indexOf(input.charAt(i++));
							enc3 = this._keyStr.indexOf(input.charAt(i++));
							enc4 = this._keyStr.indexOf(input.charAt(i++));
							chr1 = (enc1 << 2) | (enc2 >> 4);
							chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
							chr3 = ((enc3 & 3) << 6) | enc4;
							output = output + String.fromCharCode(chr1);
							if (enc3 != 64) {
								output = output + String.fromCharCode(chr2)
							}
							if (enc4 != 64) {
								output = output + String.fromCharCode(chr3)
							}
						}
						output = this._utf8_decode(output);
						return output
					};
					Base64.prototype._utf8_encode = function(string) {
						string = string.replace(/\r\n/g, "\n");
						var utftext = "";
						for (var n = 0; n < string.length; n++) {
							var c = string.charCodeAt(n);
							if (c < 128) {
								utftext += String.fromCharCode(c)
							} else {
								if ((c > 127) && (c < 2048)) {
									utftext += String
											.fromCharCode((c >> 6) | 192);
									utftext += String
											.fromCharCode((c & 63) | 128)
								} else {
									utftext += String
											.fromCharCode((c >> 12) | 224);
									utftext += String
											.fromCharCode(((c >> 6) & 63) | 128);
									utftext += String
											.fromCharCode((c & 63) | 128)
								}
							}
						}
						return utftext
					};
					Base64.prototype._utf8_decode = function(utftext) {
						var string = "", i = 0, c = 0, c1 = 0, c2 = 0, c3 = 0;
						while (i < utftext.length) {
							c = utftext.charCodeAt(i);
							if (c < 128) {
								string += String.fromCharCode(c);
								i++
							} else {
								if ((c > 191) && (c < 224)) {
									c2 = utftext.charCodeAt(i + 1);
									string += String
											.fromCharCode(((c & 31) << 6)
													| (c2 & 63));
									i += 2
								} else {
									c2 = utftext.charCodeAt(i + 1);
									c3 = utftext.charCodeAt(i + 2);
									string += String
											.fromCharCode(((c & 15) << 12)
													| ((c2 & 63) << 6)
													| (c3 & 63));
									i += 3
								}
							}
						}
						return string
					};
					var Base = new Base64();
					return Base
				}));
var V = {
	_basePath : "/" + window.location.href.split("/")[3],
	_iform : {},
	_checkflag : false,
	init : function(formid, checkflag) {
		if (!utils.isNull(checkflag)) {
			V._checkflag = checkflag
		}
		var _formobj = $("#" + formid);
		_formobj.find(".table_insert .must").each(function(index, titem) {
			var _item = $(titem);
			var _thtml = _item.html();
			_item.html("<font color='red'>*</font>" + _thtml)
		});
		_formobj
				.find(
						"input[type='text'],input[type='password'],textarea,select")
				.each(
						function(index, titem) {
							var _item = $(titem);
							if (_item[0].tagName == "SELECT"
									|| _item[0].tagName == "select") {
								var _val = _item.attr("val");
								if (_val != null && _val != "") {
									_item.val(_val)
								}
								if (_item.attr("dataflag") != null
										&& _item.attr("dataflag") != "") {
									var _param = {};
									_param["dataflag"] = _item.attr("dataflag");
									$
											.ajax({
												url : V._basePath
														+ "/commonlist/getListData.mvc",
												type : "POST",
												data : _param,
												dataType : "json",
												success : function(retdata) {
													if (retdata.length > 0) {
														$
																.each(
																		retdata,
																		function(
																				index,
																				item) {
																			var _selected = "";
																			if (_val != null
																					&& _val != ""
																					&& _val == item.value) {
																				_selected = 'selected="selected"'
																			}
																			var _topt = $('<option value="'
																					+ item.value
																					+ '" '
																					+ _selected
																					+ " >"
																					+ item.text
																					+ "</option>");
																			_topt
																					.appendTo(_item)
																		})
													}
												}
											})
								}
							}
							var _ctype = _item.attr("checktype");
							if (!utils.isNull(_ctype)) {
								_item.off("blur");
								_item.off("focus");
								_item.on("blur", function() {
									var _tobj = $(this);
									_tobj.removeClass("form_input_hover");
									V._checkObj(_tobj)
								});
								_item.on("focus", function() {
									var _tobj = $(this);
									_tobj.addClass("form_input_hover");
									V._checkObj(_tobj)
								});
								if (_item.attr("existurl") != null
										&& _item.attr("existurl") != "") {
									_item.attr("yval", _item.val())
								}
								if (V._checkflag == true) {
									_item.focus()
								}
								var _eqid = _item.attr("eqid");
								if (!utils.isNull(_eqid)) {
									var _eqobj = $("#" + _eqid);
									if (_eqobj != null) {
										_eqobj.on("blur", function() {
											V._checkObj(_item)
										})
									}
								}
							} else {
								_item.addClass("has-success")
							}
						});
		V._iform[formid] = true
	},
	validate : function(formid) {
		if (utils.isNull(V._iform[formid]) || V._iform[formid] == false) {
			V.init(formid)
		}
		var _formobj = $("#" + formid);
		var _flag = true;
		_formobj.find(
				"input[type='text'],input[type='password'],textarea,select")
				.each(function(index, titem) {
					var _item = $(titem);
					if (!utils.isNull(_item.attr("checktype"))) {
						if (!_item.hasClass("has-success")) {
							var _ret = V._checkObj(_item);
							if (_ret == false) {
								_flag = false
							}
						}
					}
				});
		return _flag
	},
	_checkObj : function(jqobj) {
		var ttype = jqobj.attr("checktype");
		var tlabel = jqobj.attr("label");
		var tvalue = jqobj.val();
		var tminval = jqobj.attr("min");
		var tmaxval = jqobj.attr("max");
		var tminlength = jqobj.attr("minlength") || tminval;
		var tmaxlength = jqobj.attr("maxlength") || tmaxval;
		var t_type = ttype.toLowerCase();
		if (/^\s+$/gi.test(tvalue) || tvalue == "") {
			if ((t_type == "b" || t_type.indexOf("b_") > -1)) {
				return V.hasError(jqobj, tlabel || "不能为空")
			}
		}
		var m_match = "";
		if (t_type.indexOf("num") > -1&&!utils.isNull(tvalue)) {
			var regnum = /^(-|\+)?\d[,|\d]*(\.\d+)?$/;
			if (regnum.test(tvalue)) {
				if (!utils.isNull(tmaxlength) || utils.isNull(tminlength)) {
					if (!utils
							.isBetween(tvalue, tmaxlength, tminlength, "char")) {
						if (utils.isNull(tmaxlength)) {
							return V.hasError(jqobj, tlabel || "不少于"
									+ tminlength + "位的数字")
						} else {
							return V.hasError(jqobj, tlabel || tminlength + "~"
									+ tmaxlength + "位的数字")
						}
					}
				}
				if (!utils.isNull(tmaxval) || !utils.isNull(tminval)) {
					if (!utils.isBetween(tvalue, tmaxval, tminval, "num")) {
						var tmsg = "输入数字必须";
						if (!utils.isNull(tminval)) {
							tmsg += "大于'" + tminval + "'"
						}
						if (!utils.isNull(tmaxval)) {
							tmsg += "小于'" + tmaxval + "'"
						}
						return V.hasError(jqobj, tlabel || tmsg)
					}
				}
			} else {
				return V.hasError(jqobj, tlabel || "请输入数字")
			}
		} else {
			if ((t_type.indexOf("date") > -1 || t_type.indexOf("datetime") > -1)&&!utils.isNull(tvalue)) {
				if (utils.isDate(tvalue, tobj)) {
					if (!utils.isNull(tmaxval) || !utils.isNull(tminval)) {
						if (!utils.isBetween(tvalue, tmaxval, tminval, "date")) {
							var tmsg = "日期必须";
							if (!utils.isNull(tobj.minvalue)) {
								tmsg += "大于'" + tobj.minvalue + "'"
							}
							if (!utils.isNull(tmaxval)) {
								tmsg += "小于'" + tmaxval + "'"
							}
							return V.hasError(jqobj, tlabel || tmsg)
						}
					}
				} else {
					return V.hasError(jqobj, tlabel || "请输入日期,格式:2016-2-18")
				}
			} else {
				if (t_type.indexOf("zsxm") > -1&&!utils.isNull(tvalue)) {
					var zsxm = /^[\u4e00-\u9fa5]+$/;
					if (!zsxm.test(tvalue)) {
						return V.hasError(jqobj, tlabel || "请输入汉字")
					}
					if (tvalue.length < 2 || tvalue.length > 10) {
						return V.hasError(jqobj, tlabel || "长度为2-10个字")
					}
				} else {
					if (t_type.indexOf("email") > -1&&!utils.isNull(tvalue)) {
						var regmail = /^([A-Za-z0-9])(\w)+@(\w)+(\.)(com|com\.cn|net|cn|net\.cn|org|biz|info|gov|gov\.cn|edu|edu\.cn)/;
						if (!regmail.test(tvalue)) {
							return V.hasError(jqobj, tlabel
									|| "请输入Email,格式:name@163.com")
						}
					} else {
						if (t_type.indexOf("phone") > -1&&!utils.isNull(tvalue)) {
							var regph = /^(0[0-9]{2,3}\-?)?([2-9][0-9]{6,7})+(\-[0-9]{1,4})?$/;
							if (!regph.test(tvalue)) {
								return V.hasError(jqobj, tlabel || "请输入有效电话号码")
							}
						} else {
							if (t_type.indexOf("mobile") > -1&&!utils.isNull(tvalue)) {
								var regmb = /^(((13[0-9]{1})|(15[0-9]{1})|(16[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
								if (!regmb.test(tvalue)) {
									return V.hasError(jqobj, tlabel
											|| "请输入11位手机号")
								}
							} else {
								if (t_type.indexOf("cardid") > -1&&!utils.isNull(tvalue)) {
									/*var m_match = /(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{4}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}[Xx]$)/;
									if (!m_match.test(tvalue)) {
										return V.hasError(jqobj, tlabel
												|| "请输入有效的身份证")
									}*/
									var city={11:"北京",12:"天津",13:"河北",14:"山西",15:"内蒙古",21:"辽宁",22:"吉林",23:"黑龙江 ",31:"上海",32:"江苏",33:"浙江",34:"安徽",35:"福建",36:"江西",37:"山东",41:"河南",42:"湖北 ",43:"湖南",44:"广东",45:"广西",46:"海南",50:"重庆",51:"四川",52:"贵州",53:"云南",54:"西藏 ",61:"陕西",62:"甘肃",63:"青海",64:"宁夏",65:"新疆",71:"台湾",81:"香港",82:"澳门",91:"国外 "};
						            var tip = "";
						            var pass= true;

						            if (!tvalue || !/^[1-9][0-9]{5}(19[0-9]{2}|200[0-9]|2010)(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9xX]$/i.test(tvalue)) {
                                        tip = "身份证号格式错误";
                                        pass = false;
                                    }

						           else if(!city[tvalue.substr(0,2)]){
						                tip = "地址编码错误";
						                pass = false;
						            }
						            else{
						                //18位身份证需要验证最后一位校验位
						                if(tvalue.length == 18){
						                	tvalue = tvalue.split('');
						                    //∑(ai×Wi)(mod 11)
						                    //加权因子
						                    var factor = [ 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2 ];
						                    //校验位
						                    var parity = [ 1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2 ];
						                    var sum = 0;
						                    var ai = 0;
						                    var wi = 0;
						                    for (var i = 0; i < 17; i++)
						                    {
						                        ai = tvalue[i];
						                        wi = factor[i];
						                        sum += ai * wi;
						                    }
						                    var last = parity[sum % 11];
						                    if(parity[sum % 11] != tvalue[17]){
						                        tip = "校验位错误";
						                        pass =false;
						                    }
						                }
						            }
						            if (!pass) {
										return V.hasError(jqobj, tlabel
												|| tip)
									}
								} else {
									if (t_type.indexOf("userid") > -1&&!utils.isNull(tvalue)) {
										var m_match = /^([a-zA-Z0-9]+)*$/;
										var _min = tminlength || "6";
										var _max = tmaxlength || "9";
										if (!tvalue.match(m_match)) {
											return V.hasError(jqobj, _min + "~"
													+ _max + "位的字母、数字")
										}
										if (!utils.isBetween(tvalue, _max,
												_min, "char")) {
											return V.hasError(jqobj, _min + "~"
													+ _max + "位的字母、数字")
										}
									} else {
										if (t_type.indexOf("char") > -1&&!utils.isNull(tvalue)) {
											var m_match = /^([a-zA-Z0-9]+)*$/;
											var _min = tminlength || "6";
											var _max = tmaxlength;
											if (!tvalue.match(m_match)) {
												if (utils.isNull(_max)) {
													return V
															.hasError(
																	jqobj,
																	"不少于"
																			+ _min
																			+ "位的字母、数字")
												} else {
													return V
															.hasError(
																	jqobj,
																	_min
																			+ "~"
																			+ _max
																			+ "位的字母、数字")
												}
											}
											if (!utils.isBetween(tvalue, _max,
													_min, "char")) {
												if (utils.isNull(_max)) {
													return V
															.hasError(
																	jqobj,
																	"不少于"
																			+ _min
																			+ "位的字母、数字")
												} else {
													return V
															.hasError(
																	jqobj,
																	"请输入"
																			+ _min
																			+ "位的数字，或者"
																			+ _max
																			+ "位的字母、数字")
												}
											}
										} else {
											if (t_type.indexOf("password") > -1&&!utils.isNull(tvalue)) {
												var m_match = /^([a-zA-Z0-9]+)*$/;
												var _min = tminlength || "6";
												var _max = tmaxlength;
												if (!tvalue.match(m_match)) {
													if (utils.isNull(_max)) {
														return V
																.hasError(
																		jqobj,
																		"不少于"
																				+ _min
																				+ "位的字母、数字")
													} else {
														return V
																.hasError(
																		jqobj,
																		_min
																				+ "~"
																				+ _max
																				+ "位的字母、数字")
													}
												}
												if (!utils.isBetween(tvalue,
														_max, _min, "char")) {
													if (utils.isNull(_max)) {
														return V
																.hasError(
																		jqobj,
																		"不少于"
																				+ _min
																				+ "位的字母、数字")
													} else {
														return V
																.hasError(
																		jqobj,
																		_min
																				+ "~"
																				+ _max
																				+ "位的字母、数字")
													}
												}
												var _eqid = jqobj.attr("eqid");
												if (!utils.isNull(_eqid)) {
													var tpass = $("#" + _eqid)
															.val();
													if (tpass != tvalue
															&& !utils
																	.isNull(tpass)) {
														return V.hasError(
																jqobj,
																"输入的密码不一致")
													}
												}
											} else {
												if (t_type.indexOf("zzjgid") > -1&&!utils.isNull(tvalue)) {
													var m_match = /^([0-9A-Z]){8}-[a-zA-Z0-9]$/;
													if (!tvalue.match(m_match)) {
														return V.hasError(
																jqobj,
																"机构代码不正确")
													}
												}
												if (t_type.indexOf("newkey") > -1&&!utils.isNull(tvalue)) {
													var m_match = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;
													if (!tvalue.match(m_match)) {
															return V
																	.hasError(
																			jqobj,"必须输入8~16位的的字母、数字混合密码")
													}
												}
												
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		var texisturl = jqobj.attr("existurl");
		if (utils.isNull(texisturl)) {
			return V.success(jqobj)
		} else {
			if (tvalue == "") {
				return V.success(jqobj)
			}
			if (jqobj.hasClass("form_input_hover")) {
				return V.success(jqobj)
			}
			if (tvalue == jqobj.attr("yval")) {
				return V.success(jqobj)
			}
			var tdata = {};
			tdata[jqobj.attr("name") || jqobj.attr("id")] = tvalue;
			var _exflag = false;
			$.ajax({
				type : "post",
				url : texisturl + "?_rnum=" + Math.random(),
				data : tdata,
				async : false,
				success : function(result) {
					if (result == "true" || result == true) {
						layer.msg("'" + tvalue + "'已经存在");
						_exflag = V.hasError(jqobj, "'" + tvalue + "'已经存在")
					} else {
						if (result == "false" || result == false) {
							_exflag = V.success(jqobj)
						}
					}
				},
				error : function() {
					_exflag = V.hasError(jqobj, "验证出错")
				}
			});
			return _exflag
		}
	},
	hasError : function(tobj, txt) {
		var tjqobj = $(tobj);
		tjqobj.attr("title", txt);
		tobj.addClass("has-error").removeClass("has-success");
		if (V.isIE8()) {
			tjqobj.css({
				"border" : "1px solid rgb(245,114,144)"
			})
		} else {
			tjqobj
					.css({
						"border-color" : "rgba(243, 75, 111, 0.8)",
						"outline" : "0",
						"outline" : "thin dotted 0.1",
						"-webkit-box-shadow" : "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(243, 72, 72, 0.6)",
						"-moz-box-shadow" : "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(243, 72, 72, 0.6)",
						"box-shadow" : "inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(243, 72, 72, 0.6)"
					})
		}
		return false
	},
	success : function(tobj) {
		var tjqobj = $(tobj);
		tjqobj.css({
			"border-color" : "",
			"outline" : "",
			"outline" : "",
			"-webkit-box-shadow" : "",
			"-moz-box-shadow" : "",
			"box-shadow" : ""
		});
		tjqobj.attr("title", "");
		tobj.addClass("has-success").removeClass("has-error");
		return true
	},
	isIE8 : function() {
		var userAgent = navigator.userAgent;
		var browser = navigator.appName;
		var bversion = navigator.appVersion.split(";");
		if (bversion.length > 1) {
			var version = bversion[1].replace(/[ ]/g, "");
			if (userAgent.indexOf("compatible") > -1
					&& userAgent.indexOf("MSIE") > -1) {
				if (browser == "Microsoft Internet Explorer"
						&& version == "MSIE8.0"
						|| browser == "Microsoft Internet Explorer"
						&& version == "MSIE9.0") {
					return true
				} else {
					return false
				}
			} else {
				return false
			}
		} else {
			return false
		}
	}
};
var JPlaceHolder = {
	_check : function() {
		return "placeholder" in document.createElement("input")
	},
	init : function() {
		if (!this._check()) {
			this.fix()
		}
	},
	fix : function() {
		jQuery("#search_form input[placeholder]").each(
				function(index, element) {
					var self = $(this), txt = self.attr("placeholder");
					if (!self.val()) {
						self.css({
							color : "#aaa"
						});
						self.val(txt)
					}
					self.focusin(function(e) {
						if (self.val() == txt) {
							self.val("")
						}
						self.css({
							color : "#000000"
						})
					}).focusout(function(e) {
						if (!self.val()) {
							self.css({
								color : "#aaa"
							});
							self.val(txt)
						}
					})
				})
	}
};
$(document).ready(function() {
	JPlaceHolder.init();
	$("input[type=password]").bind("copy cut paste", function(e) {
		return false
	})
});
